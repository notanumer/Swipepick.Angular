{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from \"@angular/forms\";\nlet AuthPageComponent = class AuthPageComponent {\n  constructor(auth, router, route) {\n    this.auth = auth;\n    this.router = router;\n    this.route = route;\n    this.isLogin = true;\n    this.submitted = false;\n  }\n  ngOnInit() {\n    this.formLogin = new FormGroup({\n      emailLogin: new FormControl(null, [Validators.required, Validators.email]),\n      passwordLogin: new FormControl(null, [Validators.required, Validators.minLength(7)])\n    });\n    this.formRegister = new FormGroup({\n      emailRegister: new FormControl(null, [Validators.required, Validators.email]),\n      passwordRegister: new FormControl(null, [Validators.required, Validators.minLength(7)]),\n      nameRegister: new FormControl(null, []),\n      lastnameRegister: new FormControl(null, [])\n    });\n  }\n  loginSubmit() {\n    if (this.formLogin.invalid) {\n      return;\n    }\n    this.submitted = true;\n    const user = {\n      email: this.formLogin.value.emailLogin,\n      password: this.formLogin.value.passwordLogin\n    };\n    this.auth.login(user).subscribe(() => {\n      this.formLogin.reset();\n      this.submitted = false;\n    }, () => {\n      this.submitted = false;\n    });\n  }\n  registerSubmit() {\n    if (this.formRegister.invalid) {\n      return;\n    }\n    const user = {\n      email: this.formRegister.value.emailRegister,\n      password: this.formRegister.value.passwordRegister,\n      name: this.formRegister.value.nameRegister,\n      lastname: this.formRegister.value.lastnameRegister\n    };\n    this.auth.register(user).subscribe(r => {\n      console.log(r);\n      this.formLogin.reset();\n      this.submitted = false;\n    }, () => {\n      this.submitted = false;\n    });\n  }\n};\nAuthPageComponent = __decorate([Component({\n  selector: 'app-auth-page',\n  templateUrl: './auth-page.component.html',\n  styleUrls: ['./auth-page.component.css']\n})], AuthPageComponent);\nexport { AuthPageComponent };","map":{"version":3,"mappings":"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","names":["Component","FormControl","FormGroup","Validators","AuthPageComponent","constructor","auth","router","route","ngOnInit","formLogin","emailLogin","required","email","passwordLogin","minLength","formRegister","emailRegister","passwordRegister","nameRegister","lastnameRegister","loginSubmit","invalid","submitted","user","value","password","login","subscribe","reset","registerSubmit","name","lastname","register","r","console","log","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["D:\\Swipepick.Angular\\src\\Swipepick.Angular.Web\\ClientApp\\src\\app\\auth-page\\auth-page.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport {AuthApiService} from \"../shared/services/auth-api.service\";\r\nimport {ActivatedRoute, Router} from \"@angular/router\";\r\nimport {FormControl, FormGroup, Validators} from \"@angular/forms\";\r\nimport {UserLogin, UserRegister} from \"../shared/interfaces/auth-interfaces\";\r\n\r\n@Component({\r\n  selector: 'app-auth-page',\r\n  templateUrl: './auth-page.component.html',\r\n  styleUrls: ['./auth-page.component.css']\r\n})\r\nexport class AuthPageComponent {\r\n\r\n  isLogin: boolean = true\r\n\r\n  formLogin!: FormGroup\r\n  formRegister!: FormGroup\r\n  submitted = false\r\n\r\n  constructor(\r\n    public auth: AuthApiService,\r\n    private router: Router,\r\n    private route: ActivatedRoute\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.formLogin = new FormGroup({\r\n      emailLogin: new FormControl(null, [\r\n        Validators.required,\r\n        Validators.email\r\n      ]),\r\n      passwordLogin: new FormControl(null, [\r\n        Validators.required,\r\n        Validators.minLength(7)\r\n      ])\r\n    })\r\n\r\n    this.formRegister = new FormGroup({\r\n      emailRegister: new FormControl(null, [\r\n        Validators.required,\r\n        Validators.email\r\n      ]),\r\n      passwordRegister: new FormControl(null, [\r\n        Validators.required,\r\n        Validators.minLength(7)\r\n      ]),\r\n      nameRegister: new FormControl(null, [\r\n      ]),\r\n      lastnameRegister: new FormControl(null, [\r\n      ])\r\n    })\r\n  }\r\n\r\n  loginSubmit() {\r\n    if (this.formLogin.invalid) {\r\n      return\r\n    }\r\n\r\n    this.submitted = true\r\n\r\n    const user: UserLogin = {\r\n      email: this.formLogin.value.emailLogin,\r\n      password: this.formLogin.value.passwordLogin\r\n    }\r\n\r\n    this.auth.login(user).subscribe(() => {\r\n      this.formLogin.reset()\r\n      this.submitted = false\r\n    }, () => {\r\n      this.submitted = false\r\n    })\r\n  }\r\n\r\n  registerSubmit() {\r\n    if (this.formRegister.invalid) {\r\n      return\r\n    }\r\n\r\n    const user: UserRegister = {\r\n      email: this.formRegister.value.emailRegister,\r\n      password: this.formRegister.value.passwordRegister,\r\n      name: this.formRegister.value.nameRegister,\r\n      lastname: this.formRegister.value.lastnameRegister\r\n    }\r\n\r\n    this.auth.register(user).subscribe((r) => {\r\n      console.log(r)\r\n      this.formLogin.reset()\r\n      this.submitted = false\r\n    }, () => {\r\n      this.submitted = false\r\n    })\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}