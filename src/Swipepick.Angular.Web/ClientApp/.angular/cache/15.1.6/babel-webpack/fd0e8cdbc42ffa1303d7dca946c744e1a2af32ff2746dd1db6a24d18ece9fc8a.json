{"ast":null,"code":"import { FormControl, FormGroup, Validators } from \"@angular/forms\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../shared/services/auth-api.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"../shared/components/validation-message/validation-message.component\";\nfunction AuthPageComponent_form_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"form\", 9);\n    i0.ɵɵlistener(\"ngSubmit\", function AuthPageComponent_form_10_Template_form_ngSubmit_0_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.loginSubmit());\n    });\n    i0.ɵɵelementStart(1, \"div\", 10)(2, \"div\", 11)(3, \"label\", 12);\n    i0.ɵɵtext(4, \"\\u0412\\u0430\\u0448 E-mail\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(5, \"input\", 13)(6, \"app-validation-message\", 14);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"div\", 11)(8, \"label\", 15);\n    i0.ɵɵtext(9, \"\\u0412\\u0430\\u0448 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(10, \"input\", 16)(11, \"app-validation-message\", 14);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"button\", 17);\n    i0.ɵɵtext(13, \"\\u0412\\u041E\\u0419\\u0422\\u0418\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"formGroup\", ctx_r0.formLogin);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"control\", ctx_r0.formLogin.controls[\"emailLogin\"]);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"control\", ctx_r0.formLogin.controls[\"passwordLogin\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"disabled\", ctx_r0.formLogin.invalid);\n  }\n}\nfunction AuthPageComponent_ng_template_11_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"form\", 9);\n    i0.ɵɵlistener(\"ngSubmit\", function AuthPageComponent_ng_template_11_Template_form_ngSubmit_0_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.registerSubmit());\n    });\n    i0.ɵɵelementStart(1, \"div\", 10)(2, \"div\", 11)(3, \"label\", 18);\n    i0.ɵɵtext(4, \"\\u0412\\u0430\\u0448 E-mail\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(5, \"input\", 19)(6, \"app-validation-message\", 14);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"div\", 11)(8, \"label\", 20);\n    i0.ɵɵtext(9, \"\\u041F\\u0440\\u0438\\u0434\\u0443\\u043C\\u0430\\u0439\\u0442\\u0435 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(10, \"input\", 21)(11, \"app-validation-message\", 14);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"div\", 11)(13, \"label\", 22);\n    i0.ɵɵtext(14, \"\\u0412\\u0430\\u0448\\u0435 \\u0438\\u043C\\u044F\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(15, \"input\", 23)(16, \"app-validation-message\", 14);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(17, \"div\", 11)(18, \"label\", 24);\n    i0.ɵɵtext(19, \"\\u0412\\u0430\\u0448\\u0430 \\u0444\\u0430\\u043C\\u0438\\u043B\\u0438\\u044F\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(20, \"input\", 25)(21, \"app-validation-message\", 14);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(22, \"button\", 17);\n    i0.ɵɵtext(23, \"\\u0417\\u0410\\u0420\\u0415\\u0413\\u0418\\u0421\\u0422\\u0420\\u0418\\u0420\\u041E\\u0412\\u0410\\u0422\\u042C\\u0421\\u042F\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"formGroup\", ctx_r2.formRegister);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"control\", ctx_r2.formRegister.controls[\"emailRegister\"]);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"control\", ctx_r2.formRegister.controls[\"passwordRegister\"]);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"control\", ctx_r2.formRegister.controls[\"nameRegister\"]);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"control\", ctx_r2.formRegister.controls[\"lastnameRegister\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"disabled\", ctx_r2.formRegister.invalid);\n  }\n}\nconst _c0 = function () {\n  return [\"/\"];\n};\nconst _c1 = function (a0, a1) {\n  return {\n    button_switch: a0,\n    button_switch_activated: a1\n  };\n};\nexport class AuthPageComponent {\n  constructor(auth, router, route) {\n    this.auth = auth;\n    this.router = router;\n    this.route = route;\n    this.isLogin = true;\n    this.submitted = false;\n  }\n  ngOnInit() {\n    this.formLogin = new FormGroup({\n      emailLogin: new FormControl(null, [Validators.required, Validators.email]),\n      passwordLogin: new FormControl(null, [Validators.required, Validators.minLength(7)])\n    });\n    this.formRegister = new FormGroup({\n      emailRegister: new FormControl(null, [Validators.required, Validators.email]),\n      passwordRegister: new FormControl(null, [Validators.required, Validators.minLength(7)]),\n      nameRegister: new FormControl(null, [Validators.required]),\n      lastnameRegister: new FormControl(null, [Validators.required])\n    });\n  }\n  loginSubmit() {\n    if (this.formLogin.invalid) {\n      return;\n    }\n    this.submitted = true;\n    const user = {\n      email: this.formLogin.value.emailLogin,\n      password: this.formLogin.value.passwordLogin\n    };\n    this.auth.login(user).subscribe(() => {\n      this.formLogin.reset();\n      this.submitted = false;\n      this.router.navigate(['/']);\n    }, r => {\n      console.log(r);\n      this.submitted = false;\n    });\n  }\n  registerSubmit() {\n    if (this.formRegister.invalid) {\n      return;\n    }\n    const user = {\n      email: this.formRegister.value.emailRegister,\n      password: this.formRegister.value.passwordRegister,\n      name: this.formRegister.value.nameRegister,\n      lastname: this.formRegister.value.lastnameRegister\n    };\n    this.auth.register(user).subscribe(() => {\n      this.submitted = false;\n      const userLogin = {\n        email: user.email,\n        password: user.password\n      };\n      this.auth.login(userLogin).subscribe(() => this.router.navigate(['/']));\n      this.formRegister.reset();\n    }, () => {\n      this.submitted = false;\n    });\n  }\n  replaceForm(isLoginButton) {\n    this.isLogin = isLoginButton;\n    if (isLoginButton) {\n      this.formRegister.reset();\n    } else {\n      this.formLogin.reset();\n    }\n  }\n}\nAuthPageComponent.ɵfac = function AuthPageComponent_Factory(t) {\n  return new (t || AuthPageComponent)(i0.ɵɵdirectiveInject(i1.AuthApiService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n};\nAuthPageComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AuthPageComponent,\n  selectors: [[\"app-auth-page\"]],\n  decls: 13,\n  vars: 12,\n  consts: [[1, \"background\"], [1, \"form_wrapper\"], [\"href\", \"/\", 1, \"logo\", 3, \"routerLink\"], [\"src\", \"./assets/images/logo2.svg\", \"alt\", \"logo\"], [1, \"login_form\"], [1, \"button_wrapper\"], [3, \"ngClass\", \"click\"], [3, \"formGroup\", \"ngSubmit\", 4, \"ngIf\", \"ngIfElse\"], [\"registrationFormBlock\", \"\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"registration_inputs\"], [1, \"input_wrapper\"], [\"for\", \"emailLogin\"], [\"id\", \"emailLogin\", \"type\", \"email\", \"formControlName\", \"emailLogin\", 1, \"input\"], [3, \"control\"], [\"for\", \"passwordLogin\"], [\"id\", \"passwordLogin\", \"type\", \"password\", \"formControlName\", \"passwordLogin\", 1, \"input\"], [\"type\", \"submit\", 1, \"send_button\", 3, \"disabled\"], [\"for\", \"emailRegister\"], [\"id\", \"emailRegister\", \"type\", \"email\", \"formControlName\", \"emailRegister\", 1, \"input\"], [\"for\", \"passwordRegister\"], [\"id\", \"passwordRegister\", \"type\", \"password\", \"formControlName\", \"passwordRegister\", 1, \"input\"], [\"for\", \"nameRegister\"], [\"id\", \"nameRegister\", \"type\", \"text\", \"formControlName\", \"nameRegister\", 1, \"input\"], [\"for\", \"lastnameRegister\"], [\"id\", \"lastnameRegister\", \"type\", \"text\", \"formControlName\", \"lastnameRegister\", 1, \"input\"]],\n  template: function AuthPageComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"a\", 2);\n      i0.ɵɵelement(3, \"img\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\", 4)(5, \"div\", 5)(6, \"button\", 6);\n      i0.ɵɵlistener(\"click\", function AuthPageComponent_Template_button_click_6_listener() {\n        return ctx.replaceForm(true);\n      });\n      i0.ɵɵtext(7, \"\\u0412\\u0425\\u041E\\u0414\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"button\", 6);\n      i0.ɵɵlistener(\"click\", function AuthPageComponent_Template_button_click_8_listener() {\n        return ctx.replaceForm(false);\n      });\n      i0.ɵɵtext(9, \"\\u0420\\u0415\\u0413\\u0418\\u0421\\u0422\\u0420\\u0410\\u0426\\u0418\\u042F\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(10, AuthPageComponent_form_10_Template, 14, 4, \"form\", 7);\n      i0.ɵɵtemplate(11, AuthPageComponent_ng_template_11_Template, 24, 6, \"ng-template\", null, 8, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      const _r1 = i0.ɵɵreference(12);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(5, _c0));\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(6, _c1, !ctx.isLogin, ctx.isLogin));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(9, _c1, ctx.isLogin, !ctx.isLogin));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.isLogin)(\"ngIfElse\", _r1);\n    }\n  },\n  dependencies: [i3.NgClass, i3.NgIf, i2.RouterLink, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.FormGroupDirective, i4.FormControlName, i5.ValidationMessageComponent],\n  styles: [\".background[_ngcontent-%COMP%] {\\r\\n  background-color: #8CACD0;\\r\\n  min-height: 100vh;\\r\\n  padding: 30px 0;\\r\\n}\\r\\n\\r\\n.login_form[_ngcontent-%COMP%] {\\r\\n  background-color: #FFFFFFFF;\\r\\n  border-radius: 14px;\\r\\n  margin-top: 10px;\\r\\n}\\r\\n\\r\\n.button_wrapper[_ngcontent-%COMP%] {\\r\\n  background-color: #DDEAEE;\\r\\n  border-radius: 14px;\\r\\n}\\r\\n\\r\\n.registration_inputs[_ngcontent-%COMP%] {\\r\\n  display: grid;\\r\\n  grid-template-columns: 450px;\\r\\n  gap: 10px;\\r\\n  margin-top: 20px;\\r\\n}\\r\\n\\r\\n.button_switch[_ngcontent-%COMP%] {\\r\\n  background-color: #DDEAEE;\\r\\n  font-family: 'Oswald';\\r\\n  color: #42445A;\\r\\n  font-weight: 700;\\r\\n  font-size: 22px;\\r\\n  border-radius: 14px;\\r\\n  width: 225px;\\r\\n  height: 64px;\\r\\n\\r\\n}\\r\\n.button_switch_activated[_ngcontent-%COMP%] {\\r\\n  background-color: #DDEAEE;\\r\\n  font-family: 'Oswald';\\r\\n  color: #42445A;\\r\\n  font-weight: 700;\\r\\n  font-size: 22px;\\r\\n  border-radius: 14px;\\r\\n  width: 225px;\\r\\n  height: 70px;\\r\\n  border: 10px solid #42445A;\\r\\n}\\r\\n\\r\\n.send_button[_ngcontent-%COMP%] {\\r\\n  background-color: #42445A;\\r\\n  font-family: 'Oswald';\\r\\n  font-weight: 700;\\r\\n  font-size: 20px;\\r\\n  color: #DDEAEE;\\r\\n  border-radius: 14px;\\r\\n  height: 54px;\\r\\n  margin-top: 10px;\\r\\n}\\r\\n\\r\\n.send_button[_ngcontent-%COMP%]:hover {\\r\\n  background-color: #DDEAEE;\\r\\n  color: #42445A;\\r\\n}\\r\\n\\r\\n.input_wrapper[_ngcontent-%COMP%] {\\r\\n  display: grid;\\r\\n  font-size: 20px;\\r\\n  grid-template-columns: 350px;\\r\\n  margin: auto;\\r\\n}\\r\\n\\r\\n.form_wrapper[_ngcontent-%COMP%] {\\r\\n  margin: auto;\\r\\n  width: 450px;\\r\\n}\\r\\n\\r\\n.logo[_ngcontent-%COMP%] {\\r\\n  margin: 106.5px;\\r\\n}\\r\\n\\r\\n.input[_ngcontent-%COMP%] {\\r\\n  background-color: #DDEAEE;\\r\\n  font-family: 'Oswald';\\r\\n  font-size: 18px;\\r\\n  color: #42445A;\\r\\n  height: 54px;\\r\\n  border-radius: 14px;\\r\\n  border: 3px solid #42445A;\\r\\n  padding-left: 10px;\\r\\n}\\r\\n\\r\\n.input[_ngcontent-%COMP%]:focus {\\r\\n  border-color: #8CACD0;\\r\\n}\\r\\n\\r\\n.input[_ngcontent-%COMP%]:focus {\\r\\n  border-color: #8CACD0;\\r\\n}\\r\\n\\r\\n.validation-message-wrapper[_ngcontent-%COMP%] {\\r\\n  color: crimson;\\r\\n  height: 15px;\\r\\n  font-size: 14px;\\r\\n}\\r\\n\\r\\n.input.ng-touched.ng-invalid[_ngcontent-%COMP%] {\\r\\n  border-color: crimson;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYXV0aC1wYWdlL2F1dGgtcGFnZS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UseUJBQXlCO0VBQ3pCLGlCQUFpQjtFQUNqQixlQUFlO0FBQ2pCOztBQUVBO0VBQ0UsMkJBQTJCO0VBQzNCLG1CQUFtQjtFQUNuQixnQkFBZ0I7QUFDbEI7O0FBRUE7RUFDRSx5QkFBeUI7RUFDekIsbUJBQW1CO0FBQ3JCOztBQUVBO0VBQ0UsYUFBYTtFQUNiLDRCQUE0QjtFQUM1QixTQUFTO0VBQ1QsZ0JBQWdCO0FBQ2xCOztBQUVBO0VBQ0UseUJBQXlCO0VBQ3pCLHFCQUFxQjtFQUNyQixjQUFjO0VBQ2QsZ0JBQWdCO0VBQ2hCLGVBQWU7RUFDZixtQkFBbUI7RUFDbkIsWUFBWTtFQUNaLFlBQVk7O0FBRWQ7QUFDQTtFQUNFLHlCQUF5QjtFQUN6QixxQkFBcUI7RUFDckIsY0FBYztFQUNkLGdCQUFnQjtFQUNoQixlQUFlO0VBQ2YsbUJBQW1CO0VBQ25CLFlBQVk7RUFDWixZQUFZO0VBQ1osMEJBQTBCO0FBQzVCOztBQUVBO0VBQ0UseUJBQXlCO0VBQ3pCLHFCQUFxQjtFQUNyQixnQkFBZ0I7RUFDaEIsZUFBZTtFQUNmLGNBQWM7RUFDZCxtQkFBbUI7RUFDbkIsWUFBWTtFQUNaLGdCQUFnQjtBQUNsQjs7QUFFQTtFQUNFLHlCQUF5QjtFQUN6QixjQUFjO0FBQ2hCOztBQUVBO0VBQ0UsYUFBYTtFQUNiLGVBQWU7RUFDZiw0QkFBNEI7RUFDNUIsWUFBWTtBQUNkOztBQUVBO0VBQ0UsWUFBWTtFQUNaLFlBQVk7QUFDZDs7QUFFQTtFQUNFLGVBQWU7QUFDakI7O0FBRUE7RUFDRSx5QkFBeUI7RUFDekIscUJBQXFCO0VBQ3JCLGVBQWU7RUFDZixjQUFjO0VBQ2QsWUFBWTtFQUNaLG1CQUFtQjtFQUNuQix5QkFBeUI7RUFDekIsa0JBQWtCO0FBQ3BCOztBQUVBO0VBQ0UscUJBQXFCO0FBQ3ZCOztBQUVBO0VBQ0UscUJBQXFCO0FBQ3ZCOztBQUVBO0VBQ0UsY0FBYztFQUNkLFlBQVk7RUFDWixlQUFlO0FBQ2pCOztBQUVBO0VBQ0UscUJBQXFCO0FBQ3ZCIiwic291cmNlc0NvbnRlbnQiOlsiLmJhY2tncm91bmQge1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICM4Q0FDRDA7XHJcbiAgbWluLWhlaWdodDogMTAwdmg7XHJcbiAgcGFkZGluZzogMzBweCAwO1xyXG59XHJcblxyXG4ubG9naW5fZm9ybSB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogI0ZGRkZGRkZGO1xyXG4gIGJvcmRlci1yYWRpdXM6IDE0cHg7XHJcbiAgbWFyZ2luLXRvcDogMTBweDtcclxufVxyXG5cclxuLmJ1dHRvbl93cmFwcGVyIHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjRERFQUVFO1xyXG4gIGJvcmRlci1yYWRpdXM6IDE0cHg7XHJcbn1cclxuXHJcbi5yZWdpc3RyYXRpb25faW5wdXRzIHtcclxuICBkaXNwbGF5OiBncmlkO1xyXG4gIGdyaWQtdGVtcGxhdGUtY29sdW1uczogNDUwcHg7XHJcbiAgZ2FwOiAxMHB4O1xyXG4gIG1hcmdpbi10b3A6IDIwcHg7XHJcbn1cclxuXHJcbi5idXR0b25fc3dpdGNoIHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjRERFQUVFO1xyXG4gIGZvbnQtZmFtaWx5OiAnT3N3YWxkJztcclxuICBjb2xvcjogIzQyNDQ1QTtcclxuICBmb250LXdlaWdodDogNzAwO1xyXG4gIGZvbnQtc2l6ZTogMjJweDtcclxuICBib3JkZXItcmFkaXVzOiAxNHB4O1xyXG4gIHdpZHRoOiAyMjVweDtcclxuICBoZWlnaHQ6IDY0cHg7XHJcblxyXG59XHJcbi5idXR0b25fc3dpdGNoX2FjdGl2YXRlZCB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogI0RERUFFRTtcclxuICBmb250LWZhbWlseTogJ09zd2FsZCc7XHJcbiAgY29sb3I6ICM0MjQ0NUE7XHJcbiAgZm9udC13ZWlnaHQ6IDcwMDtcclxuICBmb250LXNpemU6IDIycHg7XHJcbiAgYm9yZGVyLXJhZGl1czogMTRweDtcclxuICB3aWR0aDogMjI1cHg7XHJcbiAgaGVpZ2h0OiA3MHB4O1xyXG4gIGJvcmRlcjogMTBweCBzb2xpZCAjNDI0NDVBO1xyXG59XHJcblxyXG4uc2VuZF9idXR0b24ge1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICM0MjQ0NUE7XHJcbiAgZm9udC1mYW1pbHk6ICdPc3dhbGQnO1xyXG4gIGZvbnQtd2VpZ2h0OiA3MDA7XHJcbiAgZm9udC1zaXplOiAyMHB4O1xyXG4gIGNvbG9yOiAjRERFQUVFO1xyXG4gIGJvcmRlci1yYWRpdXM6IDE0cHg7XHJcbiAgaGVpZ2h0OiA1NHB4O1xyXG4gIG1hcmdpbi10b3A6IDEwcHg7XHJcbn1cclxuXHJcbi5zZW5kX2J1dHRvbjpob3ZlciB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogI0RERUFFRTtcclxuICBjb2xvcjogIzQyNDQ1QTtcclxufVxyXG5cclxuLmlucHV0X3dyYXBwZXIge1xyXG4gIGRpc3BsYXk6IGdyaWQ7XHJcbiAgZm9udC1zaXplOiAyMHB4O1xyXG4gIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMzUwcHg7XHJcbiAgbWFyZ2luOiBhdXRvO1xyXG59XHJcblxyXG4uZm9ybV93cmFwcGVyIHtcclxuICBtYXJnaW46IGF1dG87XHJcbiAgd2lkdGg6IDQ1MHB4O1xyXG59XHJcblxyXG4ubG9nbyB7XHJcbiAgbWFyZ2luOiAxMDYuNXB4O1xyXG59XHJcblxyXG4uaW5wdXQge1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICNEREVBRUU7XHJcbiAgZm9udC1mYW1pbHk6ICdPc3dhbGQnO1xyXG4gIGZvbnQtc2l6ZTogMThweDtcclxuICBjb2xvcjogIzQyNDQ1QTtcclxuICBoZWlnaHQ6IDU0cHg7XHJcbiAgYm9yZGVyLXJhZGl1czogMTRweDtcclxuICBib3JkZXI6IDNweCBzb2xpZCAjNDI0NDVBO1xyXG4gIHBhZGRpbmctbGVmdDogMTBweDtcclxufVxyXG5cclxuLmlucHV0OmZvY3VzIHtcclxuICBib3JkZXItY29sb3I6ICM4Q0FDRDA7XHJcbn1cclxuXHJcbi5pbnB1dDpmb2N1cyB7XHJcbiAgYm9yZGVyLWNvbG9yOiAjOENBQ0QwO1xyXG59XHJcblxyXG4udmFsaWRhdGlvbi1tZXNzYWdlLXdyYXBwZXIge1xyXG4gIGNvbG9yOiBjcmltc29uO1xyXG4gIGhlaWdodDogMTVweDtcclxuICBmb250LXNpemU6IDE0cHg7XHJcbn1cclxuXHJcbi5pbnB1dC5uZy10b3VjaGVkLm5nLWludmFsaWQge1xyXG4gIGJvcmRlci1jb2xvcjogY3JpbXNvbjtcclxufVxyXG5cclxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["FormControl","FormGroup","Validators","i0","AuthPageComponent","constructor","auth","router","route","ngOnInit","formLogin","emailLogin","required","email","passwordLogin","minLength","formRegister","emailRegister","passwordRegister","nameRegister","lastnameRegister","loginSubmit","invalid","submitted","user","value","password","login","subscribe","reset","navigate","r","console","log","registerSubmit","name","lastname","register","userLogin","replaceForm","isLoginButton","isLogin","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["D:\\Swipepick.Angular\\src\\Swipepick.Angular.Web\\ClientApp\\src\\app\\auth-page\\auth-page.component.ts","D:\\Swipepick.Angular\\src\\Swipepick.Angular.Web\\ClientApp\\src\\app\\auth-page\\auth-page.component.html"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport {AuthApiService} from \"../shared/services/auth-api.service\";\r\nimport {ActivatedRoute, Router} from \"@angular/router\";\r\nimport {AbstractControl, FormControl, FormGroup, Validators} from \"@angular/forms\";\r\nimport {UserLogin, UserLoginResponse, UserRegister} from \"../shared/interfaces/auth-interfaces\";\r\n\r\n@Component({\r\n  selector: 'app-auth-page',\r\n  templateUrl: './auth-page.component.html',\r\n  styleUrls: ['./auth-page.component.css']\r\n})\r\nexport class AuthPageComponent {\r\n\r\n  isLogin: boolean = true\r\n\r\n  formLogin!: FormGroup\r\n  formRegister!: FormGroup\r\n  submitted = false\r\n\r\n\r\n  constructor(\r\n    private auth: AuthApiService,\r\n    private router: Router,\r\n    private route: ActivatedRoute\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.formLogin = new FormGroup({\r\n      emailLogin: new FormControl(null, [\r\n        Validators.required,\r\n        Validators.email\r\n      ]),\r\n      passwordLogin: new FormControl(null, [\r\n        Validators.required,\r\n        Validators.minLength(7)\r\n      ])\r\n    })\r\n\r\n    this.formRegister = new FormGroup({\r\n      emailRegister: new FormControl(null, [\r\n        Validators.required,\r\n        Validators.email\r\n      ]),\r\n      passwordRegister: new FormControl(null, [\r\n        Validators.required,\r\n        Validators.minLength(7)\r\n      ]),\r\n      nameRegister: new FormControl(null, [\r\n        Validators.required\r\n      ]),\r\n      lastnameRegister: new FormControl(null, [\r\n        Validators.required\r\n      ])\r\n    })\r\n  }\r\n\r\n\r\n  loginSubmit() {\r\n    if (this.formLogin.invalid) {\r\n      return\r\n    }\r\n\r\n    this.submitted = true\r\n\r\n    const user: UserLogin = {\r\n      email: this.formLogin.value.emailLogin,\r\n      password: this.formLogin.value.passwordLogin\r\n    }\r\n\r\n    this.auth.login(user).subscribe(() => {\r\n      this.formLogin.reset()\r\n      this.submitted = false\r\n      this.router.navigate(['/'])\r\n    }, (r) => {\r\n      console.log(r)\r\n      this.submitted = false\r\n    })\r\n  }\r\n\r\n  registerSubmit() {\r\n    if (this.formRegister.invalid) {\r\n      return\r\n    }\r\n\r\n    const user: UserRegister = {\r\n      email: this.formRegister.value.emailRegister,\r\n      password: this.formRegister.value.passwordRegister,\r\n      name: this.formRegister.value.nameRegister,\r\n      lastname: this.formRegister.value.lastnameRegister\r\n    }\r\n\r\n    this.auth.register(user).subscribe(() => {\r\n      this.submitted = false\r\n      const userLogin: UserLogin = {\r\n        email: user.email,\r\n        password: user.password\r\n      }\r\n      this.auth.login(userLogin).subscribe(() =>\r\n        this.router.navigate(['/'])\r\n      )\r\n      this.formRegister.reset()\r\n\r\n    }, () => {\r\n      this.submitted = false\r\n    })\r\n  }\r\n\r\n  replaceForm(isLoginButton: boolean) {\r\n    this.isLogin = isLoginButton\r\n    if (isLoginButton) {\r\n      this.formRegister.reset()\r\n    } else {\r\n      this.formLogin.reset()\r\n    }\r\n  }\r\n}\r\n","<div class=\"background\">\n  <div class=\"form_wrapper\">\n    <a class=\"logo\" [routerLink]=\"['/']\" href=\"/\">\n      <img src=\"./assets/images/logo2.svg\" alt=\"logo\"/>\n    </a>\n    <div class=\"login_form\">\n      <div class=\"button_wrapper\">\n        <button\n            [ngClass]=\"{button_switch: !isLogin, button_switch_activated: isLogin}\"\n            (click)=\"replaceForm(true)\"\n        >ВХОД</button>\n        <button\n            [ngClass]=\"{button_switch: isLogin, button_switch_activated: !isLogin}\"\n            (click)=\"replaceForm(false)\"\n        >РЕГИСТРАЦИЯ</button>\n      </div>\n      <form\n          *ngIf=\"isLogin; else registrationFormBlock\"\n          [formGroup]=\"formLogin\"\n          (ngSubmit)=\"loginSubmit()\"\n      >\n        <div class=\"registration_inputs\">\n          <div class=\"input_wrapper\">\n            <label for=\"emailLogin\">Ваш E-mail</label>\n            <input\n                class=\"input\"\n                id=\"emailLogin\"\n                type=\"email\"\n                formControlName=\"emailLogin\"\n            />\n            <app-validation-message\n                [control]=\"formLogin.controls['emailLogin']\"\n            ></app-validation-message>\n          </div>\n          <div class=\"input_wrapper\">\n            <label for=\"passwordLogin\">Ваш пароль</label>\n            <input\n                class=\"input\"\n                id=\"passwordLogin\"\n                type=\"password\"\n                formControlName=\"passwordLogin\"\n            />\n            <app-validation-message\n                [control]=\"formLogin.controls['passwordLogin']\"\n            ></app-validation-message>\n          </div>\n          <button\n              type=\"submit\"\n              class=\"send_button\"\n              [disabled]=\"formLogin.invalid\"\n          >ВОЙТИ</button>\n        </div>\n      </form>\n\n      <ng-template #registrationFormBlock>\n        <form [formGroup]=\"formRegister\" (ngSubmit)=\"registerSubmit()\">\n          <div class=\"registration_inputs\">\n            <div class=\"input_wrapper\">\n              <label for=\"emailRegister\">Ваш E-mail</label>\n              <input\n                  class=\"input\"\n                  id=\"emailRegister\"\n                  type=\"email\"\n                  formControlName=\"emailRegister\"\n              />\n              <app-validation-message\n                  [control]=\"formRegister.controls['emailRegister']\"\n              ></app-validation-message>\n            </div>\n            <div class=\"input_wrapper\">\n              <label for=\"passwordRegister\">Придумайте пароль</label>\n              <input class=\"input\"\n                     id=\"passwordRegister\"\n                     type=\"password\"\n                     formControlName=\"passwordRegister\"\n              />\n              <app-validation-message\n                  [control]=\"formRegister.controls['passwordRegister']\"\n              ></app-validation-message>\n            </div>\n            <div class=\"input_wrapper\">\n              <label for=\"nameRegister\">Ваше имя</label>\n              <input\n                  class=\"input\"\n                  id=\"nameRegister\"\n                  type=\"text\"\n                  formControlName=\"nameRegister\"\n              />\n              <app-validation-message\n                  [control]=\"formRegister.controls['nameRegister']\"\n              ></app-validation-message>\n            </div>\n            <div class=\"input_wrapper\">\n              <label for=\"lastnameRegister\">Ваша фамилия</label>\n              <input\n                  class=\"input\"\n                  id=\"lastnameRegister\"\n                  type=\"text\"\n                  formControlName=\"lastnameRegister\"\n              />\n              <app-validation-message\n                  [control]=\"formRegister.controls['lastnameRegister']\"\n              ></app-validation-message>\n            </div>\n            <button\n                type=\"submit\"\n                class=\"send_button\"\n                [disabled]=\"formRegister.invalid\"\n            >ЗАРЕГИСТРИРОВАТЬСЯ</button>\n          </div>\n        </form>\n      </ng-template>\n\n    </div>\n  </div>\n</div>\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}